apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.deployment.namespace }}
  labels:
    tier: {{ .Values.app.tier | quote }}
    component: "app"
    app: {{ .Values.app.name | quote }}
    env: {{ .Values.deployment.environment | quote }}
  annotations:
    app.github.com/app: {{ .Values.deployment.pathSlug | quote }}
    app.github.com/env: {{ .Values.deployment.environment | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: {{ .Values.app.tier | quote }}
      component: "app"
      app: {{ .Values.app.name | quote }}
      env: {{ .Values.deployment.environment | quote }}
  template:
    metadata:
      labels: 
        tier: {{ .Values.app.tier | quote }}
        component: "app"
        app: {{ .Values.app.name | quote }}
        env: {{ .Values.deployment.environment | quote }}
      annotations:
        checksum/secret: {{ .Values.secretHash | quote }}
        app.github.com/app: {{ .Values.deployment.pathSlug | quote }}
        app.github.com/env: {{ .Values.deployment.environment | quote }}
    spec:
      imagePullSecrets:
        - name: github-registry-secret
      initContainers:
        - name: debug-image-pull
          image: alpine:3.14
          command: 
            - sh
            - -c
            - |
              apk add --no-cache curl jq
              echo "Debugging image pull..."
              echo "Checking registry credentials:"
              cat /var/run/secrets/kubernetes.io/dockerconfigjson/.dockerconfigjson
              echo "Attempting to authenticate and list repository:"
              REGISTRY_AUTH=$(jq -r '.auths["ghcr.io"].auth' /var/run/secrets/kubernetes.io/dockerconfigjson/.dockerconfigjson)
              curl -v -H "Authorization: Basic $REGISTRY_AUTH" https://ghcr.io/v2/zinderlabs/platform-shell-frontend/tags/list
              echo "Checking network connectivity to ghcr.io:"
              curl -v https://ghcr.io
          volumeMounts:
            - name: docker-secret
              mountPath: /var/run/secrets/kubernetes.io/dockerconfigjson
      containers:
        - name: {{ .Values.app.name }}
          image: {{ .Values.deployment.image }}
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: app-secret
                optional: true
          env:
            - name: DEBUG_IMAGE_PULL
              value: "true"
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: {{ .Values.deployment.resources.requests.memory | default "32Mi" | quote }}
              cpu: {{ .Values.deployment.resources.requests.cpu | default "150m" | quote }}
            limits:
              memory: {{ .Values.deployment.resources.limits.memory | default "64Mi" | quote }}
              cpu: {{ .Values.deployment.resources.limits.cpu | default "250m" | quote }}
      volumes:
        - name: docker-secret
          secret:
            secretName: github-registry-secret