name: Deploy Platform application with ArgoCD

on:
  workflow_call:

env:
  CONTAINER_REGISTRY: ghcr.io
  PROJECT_NAME: ${{ github.event.repository.name }}-${{ github.ref == 'refs/heads/main' && 'prd' || 'dev'}}
  ENV_SECRETS: ${{ github.ref == 'refs/heads/main' && secrets.ENV_SECRETS_PRD || secrets.ENV_SECRETS_DEV }}
  ARGOCD_SERVER: grafana.zinderlabs.com
  ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
  HELM_CHART_URL: ci-central/helm/platform-app/values.yaml

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository ${{ github.repository }}
        uses: actions/checkout@v4

      - name: Checkout repository workflow resources
        uses: actions/checkout@v4
        with:
          repository: zinderlabs/.github
          path: ci-central

      - name: Create secret hash and source env variables
        run: |
          echo "${{env.ENV_SECRETS}}" | while IFS= read -r line || [[ -n "$line" ]]; do
            echo "$line" >> $GITHUB_ENV
          done
          echo "SECRET_HASH=$(echo -n "${{env.ENV_SECRETS}}" | sha512sum | awk '{print $1}')" >> $GITHUB_ENV

      - name: Setup ArgoCD CLI
        uses: clowdhaus/argo-cd-action/@main
        env:
          # Only required for first step in job where API is called
          # All subsequent setps in a job will not re-download the CLI
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          command: version
          options: |
            --client
            --grpc-web

      - name: Configure ArgoCD CLI
        run: |
          argocd repo add ${{ github.server_url }}/${{ github.repository }} --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --upsert --grpc-web

      - name: Apply ArgoCD Application
        uses: clowdhaus/argo-cd-action/@main
        env:
          CI_ENVIRONMENT_SLUG: ${{ github.ref == 'refs/heads/main' && 'prd' || 'dev'}}
        with:
          command: app create ${{ env.PROJECT_NAME }} --upsert
          options: |
            --repo ${{ github.server_url }}/${{ github.repository }}
            --path .
            --dest-server https://kubernetes.default.svc
            --dest-namespace ${{ env.PROJECT_NAME }}
            --revision ${{ github.ref }}
            --server ${{ env.ARGOCD_SERVER }}
            --auth-token ${{ env.ARGOCD_AUTH_TOKEN }}
            --grpc-web
            --project platform-apps
            --helm-set deployment.image=${{ env.CONTAINER_REGISTRY }}/${{ github.repository }}:${{ github.sha }}
            --helm-set deployment.environment=${{ env.CI_ENVIRONMENT_SLUG }}
            --helm-set deployment.namespace=${{ env.PROJECT_NAME }}
            --helm-set secretHash=${{ env.SECRET_HASH }}
            --values ${{ env.HELM_CHART_URL }}

      - name: Trigger ArgoCD sync
        uses: clowdhaus/argo-cd-action/@main
        with:
          command: app sync ${{ env.PROJECT_NAME }}
          options: |
            --server ${{ env.ARGOCD_SERVER }}
            --auth-token ${{ env.ARGOCD_AUTH_TOKEN }}
            --grpc-web
